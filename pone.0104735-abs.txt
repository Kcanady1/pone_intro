Introduction
The advantages of loosely coupled modeling offered by Service Oriented Architecture (SOA) have made it a superior candidate to serve as a basis for the modern enterprise systems. The services specified using the established standards of SOA are termed as Web services. According to the World Wide Web Consortium (W3C), “A Web service is a software system identified by a URI, whose public interfaces and bindings are defined and described using XML. Its definition can be discovered by other software systems. These systems may then interact with the Web service in a manner prescribed by its definition, using XML based messages conveyed by Internet protocols” [1]. Recent research works in the area of Web services focus on various issues arise throughout their life cycle. These include how to specify, discover, select, mediate, compose, invoke, and monitor Web services.
A Semantic Web service is essentially a Web service that its functionality is described using semantic annotations over an ontology. Adding semantic annotations to Web services makes them machine-understandable and intelligent. This will ease the way to automate service usage tasks. Accordingly, Semantic Web service discovery attempts to make the process of finding Web services run automatically. During such process that is often called matchmaking, the formalized description of a service request and that of a service advertisement need to be compared with each other in order to recognize common elements in these descriptions.
Current Semantic Web service discovery approaches are mainly classified into Logic-based, Non-logic-based, and Hybrid categories. While Logic-based approaches rely on logic inferences for the matchmaking, Non-logic-based matchmakers exploit semantics that are implicit in patterns or relative frequencies of terms in service descriptions. Hybrid approaches combine techniques from both of the previous matchmakers [2], [3].
One of the main challenges of Web service discovery is improving the performance by avoiding false results which can be either false positives (i.e., Web services in the answer set that are not relevant to the request) or false negatives (i.e., Web services that are not included in the answer set, but are relevant to the request). False positive and false negative results are respectively used to calculate the precision and recall measures of a Web service discovery approach. For any information retrieval (IR)-based approach including Web service discovery system, precision is a notion of correctness which is defined as the proportion of relevant documents retrieved by the retrieval algorithm to all of the retrieved documents, whereas recall is a notion of completeness of the approach which is defined as the proportion of relevant documents that have been retrieved to all of the relevant documents [4].
The aforementioned categories employ different strategies to perform Semantic Web service discovery and improve the performance of this process in terms of precision and recall measures. In particular, the Non-logic-based approaches aim to achieve this goal by relying on such techniques as graph matching, linguistics, data mining, or information retrieval [5]. They do not perform logical reasoning to determine the degree of similarity between two service descriptions.
In this paper, a Non-logic-based semantic matchmaker is proposed, called UltiMatch-NL. It applies two different filters to achieve more accurate results in matching requests and Web services. The proposed filters are fully semantic-based and consider various elements of a service description. In addition, a new approach is presented to weight the results of these filters and determine an overall similarity.
The Non-logic-based approaches to Web service discovery receive a request as input and return as output a list of Web services ordered by their similarity to the request. Usually, the similarity is a value between 0 and 1. Determining a threshold for the similarity value is a challenge. However, the current approaches share a common weakness, as they disregard such challenge. This study proposes the use of classification methods to eliminate the need for setting such threshold manually. The classification methods used in this study are logistic regression and discriminant analysis. These methods provide the same functionality, but follow different approaches. These classification methods are also adapted to predict the relevance of requests and Web services. There are various frameworks to describe Semantic Web services [6]. UltiMatch-NL focuses on semantic services that are described in OWL-S [7].
The remainder of this paper is structured as follows. The next section summarizes the study of related works. After that the design and implementation of UltiMatch-NL is explained. This section describes the designed filters and the technique to weight and combine their results. Then, UltiMatch-NL is evaluated and the results are analyzed. The last section concludes this paper.
